Next: Connect the form to MongoDB using Node.js
Hereâ€™s a basic example using Express.js and Mongoose:

1. Install dependencies
bash
Copy
Edit
npm init -y
npm install express mongoose body-parser cors
2. Create a file server.js:
js
Copy
Edit
const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(bodyParser.json());

// MongoDB connection
mongoose.connect('mongodb://localhost:27017/contactForm', {
    useNewUrlParser: true,
    useUnifiedTopology: true
});

// Schema
const ContactSchema = new mongoose.Schema({
    name: String,
    email: String,
    phone: String,
    message: String
});

const Contact = mongoose.model('Contact', ContactSchema);

// Route to handle form submission
app.post('/contact', async (req, res) => {
    try {
        const newContact = new Contact(req.body);
        await newContact.save();
        res.status(200).send("Contact saved!");
    } catch (error) {
        res.status(500).send("Error saving contact.");
    }
});

app.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});
3. Connect your form with JavaScript (frontend):
Add this before the closing </body> tag:

html
Copy
Edit
<script>
document.querySelector("form").addEventListener("submit", async function (e) {
    e.preventDefault();

    const formData = {
        name: this.name.value,
        email: this.email.value,
        phone: this.phone.value,
        message: this.message.value
    };

    const response = await fetch("http://localhost:3000/contact", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
    });

    const result = await response.text();
    alert(result);
});
</script>